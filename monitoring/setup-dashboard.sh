#!/bin/bash

# DressUp AI - Cloud Monitoring Dashboard Setup Script
# Creates a comprehensive monitoring dashboard for application health and performance

set -e  # Exit on any error

PROJECT_ID="project-friday-471118"
DASHBOARD_NAME="DressUp AI - Application Monitoring"
DASHBOARD_CONFIG="dashboard-config.json"

echo "üìä Setting up Cloud Monitoring Dashboard for DressUp AI"
echo "üìç Project: $PROJECT_ID"
echo "üìÑ Config: $DASHBOARD_CONFIG"
echo ""

# Ensure we're authenticated and project is set
gcloud config set project $PROJECT_ID

# Check if dashboard config exists
if [ ! -f "$DASHBOARD_CONFIG" ]; then
    echo "‚ùå Dashboard configuration file not found: $DASHBOARD_CONFIG"
    echo "Make sure you're running this script from the monitoring directory."
    exit 1
fi

echo "üìã Dashboard configuration found"
echo "üîß Creating monitoring dashboard..."

# Create the dashboard using gcloud
DASHBOARD_ID=$(gcloud monitoring dashboards create --config-from-file="$DASHBOARD_CONFIG" --format="value(name)" --quiet)

if [ $? -eq 0 ] && [ -n "$DASHBOARD_ID" ]; then
    echo "‚úÖ Dashboard created successfully!"
    echo ""
    echo "üìä Dashboard Details:"
    echo "   Name: $DASHBOARD_NAME"
    echo "   ID: $DASHBOARD_ID"
    echo ""
    echo "üîó View Dashboard:"
    DASHBOARD_URL="https://console.cloud.google.com/monitoring/dashboards/custom/${DASHBOARD_ID##*/}?project=$PROJECT_ID"
    echo "   $DASHBOARD_URL"
    echo ""
    echo "üìà Dashboard includes:"
    echo "   ‚Ä¢ Generation request rate and success metrics"
    echo "   ‚Ä¢ Processing latency and performance trends"
    echo "   ‚Ä¢ User feedback and satisfaction ratings"
    echo "   ‚Ä¢ Vertex AI API performance monitoring"
    echo "   ‚Ä¢ Error rates and system health indicators"
    echo "   ‚Ä¢ Storage cleanup efficiency tracking"
    echo "   ‚Ä¢ Business intelligence scorecards"
    echo "   ‚Ä¢ Function execution time distributions"
    echo ""
    echo "‚ö†Ô∏è  Note: Metrics will appear after:"
    echo "   1. Cloud Functions are deployed with structured logging"
    echo "   2. Log-based metrics are created (run setup-metrics.sh)"
    echo "   3. Application generates some traffic"
    echo ""
    echo "üöÄ Next steps:"
    echo "   1. Deploy Cloud Functions: cd ../functions && npm run deploy"
    echo "   2. Create log metrics: ./setup-metrics.sh" 
    echo "   3. Generate test traffic to populate dashboard"
    echo "   4. Set up alerting policies based on dashboard metrics"
    echo "   5. Configure budget alerts: ./setup-budget-alerts.sh"
else
    echo "‚ùå Failed to create dashboard"
    echo "Check the dashboard configuration and try again."
    exit 1
fi