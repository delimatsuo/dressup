# Cloud Logging Metrics Configuration for DressUp AI
# These metrics will be created from the structured logs generated by our application

metrics:
  # Session Metrics
  - name: session_creation_rate
    description: "Rate of session creation events"
    filter: 'jsonPayload.structuredData.eventType="SESSION_CREATED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    labelExtractors:
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)
      
  - name: session_duration
    description: "Session duration in minutes"
    filter: 'jsonPayload.structuredData.eventType="SESSION_DELETED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    valueExtractor: EXTRACT(jsonPayload.structuredData.filesDeleted)
    labelExtractors:
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  # Generation Metrics
  - name: generation_requests_total
    description: "Total number of generation requests"
    filter: 'jsonPayload.structuredData.eventType="GENERATION_STARTED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    labelExtractors:
      request_type: EXTRACT(jsonPayload.structuredData.requestType)
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  - name: generation_success_rate
    description: "Generation completion success rate"
    filter: 'jsonPayload.structuredData.eventType="GENERATION_COMPLETED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: "1.0"  # Each success counts as 1
    labelExtractors:
      request_type: EXTRACT(jsonPayload.structuredData.requestType)
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  - name: generation_failure_rate
    description: "Generation failure rate"
    filter: 'jsonPayload.structuredData.eventType="GENERATION_FAILED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: "1.0"  # Each failure counts as 1
    labelExtractors:
      request_type: EXTRACT(jsonPayload.structuredData.requestType)
      error_type: EXTRACT(jsonPayload.structuredData.errorName)
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  # Performance Metrics
  - name: generation_latency_ms
    description: "Generation processing latency in milliseconds"
    filter: 'jsonPayload.structuredData.eventType="GENERATION_COMPLETED" AND jsonPayload.structuredData.performance.executionTimeMs > 0'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.performance.executionTimeMs)
    labelExtractors:
      request_type: EXTRACT(jsonPayload.structuredData.requestType)
      function_name: EXTRACT(jsonPayload.structuredData.functionName)

  - name: vertex_ai_latency_ms
    description: "Vertex AI API response latency in milliseconds"
    filter: 'jsonPayload.structuredData.eventType="VERTEX_AI_RESPONSE" AND jsonPayload.structuredData.duration > 0'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.duration)
    labelExtractors:
      success: EXTRACT(jsonPayload.structuredData.success)
      service: EXTRACT(jsonPayload.structuredData.service)

  # Quality Metrics
  - name: generation_confidence_score
    description: "AI generation confidence scores"
    filter: 'jsonPayload.structuredData.eventType="GENERATION_COMPLETED" AND jsonPayload.structuredData.metrics.confidence > 0'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.metrics.confidence)
    labelExtractors:
      request_type: EXTRACT(jsonPayload.structuredData.requestType)
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  - name: feedback_ratings
    description: "User feedback ratings"
    filter: 'jsonPayload.structuredData.eventType="FEEDBACK_SUBMITTED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.averageRating)
    labelExtractors:
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)
      result_id: EXTRACT(jsonPayload.structuredData.resultId)

  # Storage & Cleanup Metrics
  - name: storage_cleanup_files_deleted
    description: "Number of files deleted during storage cleanup"
    filter: 'jsonPayload.structuredData.eventType="STORAGE_CLEANUP"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    valueExtractor: EXTRACT(jsonPayload.structuredData.deletedFiles)
    labelExtractors:
      cleanup_type: EXTRACT(jsonPayload.structuredData.cleanupType)

  - name: storage_cleanup_success_rate
    description: "Storage cleanup success rate"
    filter: 'jsonPayload.structuredData.eventType="STORAGE_CLEANUP" AND jsonPayload.structuredData.successRate >= 0'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.successRate)
    labelExtractors:
      cleanup_type: EXTRACT(jsonPayload.structuredData.cleanupType)

  # Error Metrics
  - name: error_rate
    description: "Application error rate by type"
    filter: 'jsonPayload.structuredData.eventType="ERROR_OCCURRED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    valueExtractor: "1"  # Count each error as 1
    labelExtractors:
      error_type: EXTRACT(jsonPayload.structuredData.errorName)
      function_name: EXTRACT(jsonPayload.structuredData.functionName)

  # Business Metrics
  - name: photo_uploads_total
    description: "Total photo uploads by type"
    filter: 'jsonPayload.structuredData.eventType="PHOTO_UPLOADED"'
    metricDescriptor:
      metricKind: GAUGE
      valueType: INT64
    labelExtractors:
      photo_type: EXTRACT(jsonPayload.structuredData.photoType)
      session_id: EXTRACT(jsonPayload.structuredData.sessionId)

  - name: garment_fetch_latency_ms
    description: "Garment catalog fetch latency in milliseconds"
    filter: 'jsonPayload.structuredData.eventType="GARMENT_FETCHED" AND jsonPayload.structuredData.duration > 0'
    metricDescriptor:
      metricKind: GAUGE
      valueType: DOUBLE
    valueExtractor: EXTRACT(jsonPayload.structuredData.duration)
    labelExtractors:
      count: EXTRACT(jsonPayload.structuredData.count)

# Alerting Policies (will be referenced in dashboard creation)
alertPolicies:
  - name: high_error_rate
    condition: error_rate > 10  # More than 10 errors per minute
    description: "Alert when error rate is high"
    
  - name: slow_generation
    condition: generation_latency_ms > 300000  # More than 5 minutes
    description: "Alert when generation takes too long"
    
  - name: vertex_ai_failures
    condition: vertex_ai_latency_ms > 60000 OR vertex_ai_success_rate < 0.8  # More than 1 minute OR success rate below 80%
    description: "Alert when Vertex AI performance degrades"
    
  - name: low_user_satisfaction
    condition: feedback_ratings < 3.0  # Average rating below 3.0
    description: "Alert when user satisfaction is low"

# Dashboard Configuration Reference
dashboardMetrics:
  primary:
    - generation_requests_total
    - generation_success_rate
    - generation_latency_ms
    - generation_confidence_score
    
  performance:
    - vertex_ai_latency_ms
    - garment_fetch_latency_ms
    - storage_cleanup_success_rate
    
  quality:
    - feedback_ratings
    - generation_confidence_score
    - error_rate
    
  usage:
    - session_creation_rate
    - photo_uploads_total
    - storage_cleanup_files_deleted